// Targeted by JavaCPP version 1.5.4-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.libtorch;

import org.bytedeco.javacpp.Loader;
import org.bytedeco.javacpp.Pointer;
import org.bytedeco.javacpp.annotation.Cast;
import org.bytedeco.javacpp.annotation.Namespace;
import org.bytedeco.javacpp.annotation.Properties;


/** Options for the {@code InstanceNorm} module. */
@Namespace("torch::nn") @Properties(inherit = org.bytedeco.libtorch.presets.libtorch.class)
public class InstanceNormOptions extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public InstanceNormOptions(Pointer p) { super(p); }

  /* implicit */ public InstanceNormOptions(@Cast("int64_t") long num_features) { super((Pointer)null); allocate(num_features); }
private native void allocate(@Cast("int64_t") long num_features);

  /** The number of features of the input tensor. */

  /** The epsilon value added for numerical stability. */

  /** A momentum multiplier for the mean and variance. */

  /** Whether to learn a scale and bias that are applied in an affine
   *  transformation on the input. */

  /** Whether to store and update batch statistics (mean and variance) in the
   *  module. */
}
