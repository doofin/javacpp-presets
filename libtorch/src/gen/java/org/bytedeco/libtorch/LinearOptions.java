// Targeted by JavaCPP version 1.5.4-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.libtorch;

import org.bytedeco.javacpp.Loader;
import org.bytedeco.javacpp.Pointer;
import org.bytedeco.javacpp.annotation.Cast;
import org.bytedeco.javacpp.annotation.Namespace;
import org.bytedeco.javacpp.annotation.Properties;


/** Options for the {@code Linear} module.
 * 
 *  Example:
 *  <pre>{@code
 *  Linear model(LinearOptions(5, 2).bias(false));
 *  }</pre> */
@Namespace("torch::nn") @Properties(inherit = org.bytedeco.libtorch.presets.libtorch.class)
public class LinearOptions extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public LinearOptions(Pointer p) { super(p); }

  public LinearOptions(@Cast("int64_t") long in_features, @Cast("int64_t") long out_features) { super((Pointer)null); allocate(in_features, out_features); }
  private native void allocate(@Cast("int64_t") long in_features, @Cast("int64_t") long out_features);
  /** size of each input sample */

  /** size of each output sample */

  /** If set to false, the layer will not learn an additive bias. Default: true */
}
