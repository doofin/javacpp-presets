// Targeted by JavaCPP version 1.5.4-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.libtorch;

import org.bytedeco.javacpp.Loader;
import org.bytedeco.javacpp.Pointer;
import org.bytedeco.javacpp.annotation.ByVal;
import org.bytedeco.javacpp.annotation.Namespace;
import org.bytedeco.javacpp.annotation.Properties;
 // namespace functional

// ============================================================================

/** Options for the {@code Unfold} module.
 * 
 *  Example:
 *  <pre>{@code
 *  Unfold model(UnfoldOptions({2, 4}).dilation(2).padding({2, 1}).stride(2));
 *  }</pre> */
@Namespace("torch::nn") @Properties(inherit = org.bytedeco.libtorch.presets.libtorch.class)
public class UnfoldOptions extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public UnfoldOptions(Pointer p) { super(p); }

  public UnfoldOptions(@ByVal ExpandingArray2 kernel_size) { super((Pointer)null); allocate(kernel_size); }
  private native void allocate(@ByVal ExpandingArray2 kernel_size);

  /** the size of the sliding blocks */

  /** controls the spacing between the kernel points; also known as the Ã  trous
   *  algorithm. */

  /** controls the amount of implicit zero-paddings on both sides for padding
   *  number of points for each dimension before reshaping. */

  /** controls the stride for the sliding blocks. */
}
