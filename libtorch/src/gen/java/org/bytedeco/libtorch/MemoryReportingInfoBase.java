// Targeted by JavaCPP version 1.5.4-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.libtorch;

import org.bytedeco.javacpp.Loader;
import org.bytedeco.javacpp.Pointer;
import org.bytedeco.javacpp.annotation.ByVal;
import org.bytedeco.javacpp.annotation.Cast;
import org.bytedeco.javacpp.annotation.Namespace;
import org.bytedeco.javacpp.annotation.Properties;


// An interface for reporting thread local memory usage
// per device
@Namespace("c10") @Properties(inherit = org.bytedeco.libtorch.presets.libtorch.class)
public class MemoryReportingInfoBase extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public MemoryReportingInfoBase(Pointer p) { super(p); }


  // Negative alloc_size corresponds to freeing of the memory
  public native void reportMemoryUsage(Pointer ptr, @Cast("int64_t") long alloc_size, @ByVal Device device);

  public native @Cast("bool") boolean memoryProfilingEnabled();
}
