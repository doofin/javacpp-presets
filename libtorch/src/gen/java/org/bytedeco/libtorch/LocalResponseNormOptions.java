// Targeted by JavaCPP version 1.5.4-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.libtorch;

import org.bytedeco.javacpp.Loader;
import org.bytedeco.javacpp.Pointer;
import org.bytedeco.javacpp.annotation.Cast;
import org.bytedeco.javacpp.annotation.Namespace;
import org.bytedeco.javacpp.annotation.Properties;
 // namespace functional

// ============================================================================

/** Options for the {@code LocalResponseNorm} module.
 * 
 *  Example:
 *  <pre>{@code
 *  LocalResponseNorm model(LocalResponseNormOptions(2).alpha(0.0002).beta(0.85).k(2.));
 *  }</pre> */
@Namespace("torch::nn") @Properties(inherit = org.bytedeco.libtorch.presets.libtorch.class)
public class LocalResponseNormOptions extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public LocalResponseNormOptions(Pointer p) { super(p); }

  /* implicit */ public LocalResponseNormOptions(@Cast("int64_t") long size) { super((Pointer)null); allocate(size); }
private native void allocate(@Cast("int64_t") long size);
  /** amount of neighbouring channels used for normalization */

  /** multiplicative factor. Default: 1e-4 */

  /** exponent. Default: 0.75 */

  /** additive factor. Default: 1 */
}
