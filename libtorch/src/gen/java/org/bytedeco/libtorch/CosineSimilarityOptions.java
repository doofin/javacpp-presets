// Targeted by JavaCPP version 1.5.4-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.libtorch;

import org.bytedeco.javacpp.Loader;
import org.bytedeco.javacpp.Pointer;
import org.bytedeco.javacpp.annotation.Namespace;
import org.bytedeco.javacpp.annotation.Properties;


/** Options for the {@code CosineSimilarity} module.
 * 
 *  Example:
 *  <pre>{@code
 *  CosineSimilarity model(CosineSimilarityOptions().dim(0).eps(0.5));
 *  }</pre> */
@Namespace("torch::nn") @Properties(inherit = org.bytedeco.libtorch.presets.libtorch.class)
public class CosineSimilarityOptions extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public CosineSimilarityOptions() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CosineSimilarityOptions(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CosineSimilarityOptions(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public CosineSimilarityOptions position(long position) {
        return (CosineSimilarityOptions)super.position(position);
    }
    @Override public CosineSimilarityOptions getPointer(long i) {
        return new CosineSimilarityOptions(this).position(position + i);
    }

  /** Dimension where cosine similarity is computed. Default: 1 */
  /** Small value to avoid division by zero. Default: 1e-8 */
}
