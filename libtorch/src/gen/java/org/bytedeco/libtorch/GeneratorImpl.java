// Targeted by JavaCPP version 1.5.4-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.libtorch;

import org.bytedeco.javacpp.Loader;
import org.bytedeco.javacpp.Pointer;
import org.bytedeco.javacpp.annotation.*;


@Namespace("c10") @NoOffset @Properties(inherit = org.bytedeco.libtorch.presets.libtorch.class)
public class GeneratorImpl extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public GeneratorImpl(Pointer p) { super(p); }

  // Constructors

  // Delete all copy and move assignment in favor of clone()
  // method
  
  
  
  public native @ByVal @Cast("c10::intrusive_ptr<c10::GeneratorImpl>*") Pointer clone();

  // Common methods for all generators
  public native void set_current_seed(@Cast("uint64_t") long seed);
  public native @Cast("uint64_t") long current_seed();
  public native @Cast("uint64_t") long seed();
  public native @ByVal Device device();

  // See Note [Acquire lock when using random generators]
  

  public native @ByVal @Cast("c10::DispatchKeySet*") Pointer key_set();

  public native @NoException void set_pyobj(@Cast("PyObject*") Pointer pyobj);

  public native @Cast("PyObject*") @NoException Pointer pyobj();
}
