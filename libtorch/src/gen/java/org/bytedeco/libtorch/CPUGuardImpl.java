// Targeted by JavaCPP version 1.5.4-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.libtorch;

import org.bytedeco.javacpp.Loader;
import org.bytedeco.javacpp.Pointer;
import org.bytedeco.javacpp.PointerPointer;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.libtorch.global.libtorch.EventFlag;


@Namespace("at::detail") @Properties(inherit = org.bytedeco.libtorch.presets.libtorch.class)
public class CPUGuardImpl extends DeviceGuardImplInterface {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CPUGuardImpl(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CPUGuardImpl(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public CPUGuardImpl position(long position) {
        return (CPUGuardImpl)super.position(position);
    }
    @Override public CPUGuardImpl getPointer(long i) {
        return new CPUGuardImpl(this).position(position + i);
    }

  public CPUGuardImpl() { super((Pointer)null); allocate(); }
  private native void allocate();
  public native @Cast("c10::DeviceType") short type();
  public native @ByVal Device exchangeDevice(@ByVal Device arg0);
  public native @ByVal Device getDevice();
  public native void setDevice(@ByVal Device arg0);
  public native @NoException void uncheckedSetDevice(@ByVal Device d);
  public native @ByVal @NoException Stream getStream(@ByVal Device d);
  // NB: These do NOT set the current device
  public native @ByVal @NoException Stream exchangeStream(@ByVal Stream s);
  public native @Cast("at::DeviceIndex") @NoException short deviceCount();

  // Event-related functions
  public native void record(@Cast("void**") PointerPointer event,
      @Const @ByRef Stream stream,
      @Cast("const at::DeviceIndex") short device_index,
      @Const @ByVal EventFlag flag);
  public native void record(@Cast("void**") @ByPtrPtr Pointer event,
      @Const @ByRef Stream stream,
      @Cast("const at::DeviceIndex") short device_index,
      @Const @ByVal EventFlag flag);
  public native void block(
      Pointer event,
      @Const @ByRef Stream stream);
  public native @Cast("bool") boolean queryEvent(Pointer event);
  public native @NoException void destroyEvent(
      Pointer event,
      @Cast("const at::DeviceIndex") short device_index);
}
